var express=require("express"),jsonfile=require("jsonfile"),CryptoJS=require("crypto-js"),path=require("path"),conf=require("./config/setting.json"),setting=path.join(__dirname,"./config/oxd.setting.json"),parameters=path.join(__dirname,"./config/parameters.json"),app=express(),session=require("express-session"),server=require("http").Server(app),https=require("https"),oxd=require("oxd-node"),sess,localStorage=require("localStorage");app.use(session({secret:"kmyorb[y9b9bf9k,",resave:!1,saveUninitialized:!0}));var index_route=require("./routes/index.route")(express.Router());app.use("/",index_route);app.get("/",function(req,res){sess=req.session;if(sess.userprofile){console.log(new Date().toLocaleString()+" >> Hello, "+sess.userprofile.name);app.use(express.static("./"));res.sendFile("index.html",{root:"./"})}else{if(req.query.code){let code=req.query.code,state=req.query.state;getToken(code,state).then(token=>{if(token){getUserInfo(token.accessToken,res).then(profile=>{if(profile.orgProvinceCode){if("active"==profile.userState){sess.userprofile=profile;app.use(express.static("./"));res.cookie("tpb-userprofile",profile,{secure:!0});req.session.cookie.expires=new Date(Date.now()+216e5);console.log("userprofile",sess.userprofile);res.redirect("/")}else res.redirect(conf.iaam_url+"/profile/"+CryptoJS.AES.encrypt(profile.userName,conf.aes_secret))}else res.redirect(conf.iaam_url+"/edit-profile/"+CryptoJS.AES.encrypt(profile.userName,conf.aes_secret))})}})}else{jsonfile.readFile(setting,function(err,obj){if(""!=obj.oxd_id){oxd.Request.oxd_id=obj.oxd_id;oxd.get_authorization_url(oxd.Request,function(response){response=JSON.parse(response);res.redirect(response.data.authorization_url)})}else{var data={error:"please register first."};res.json(data)}})}}});function getToken(authCode,authState){return new Promise((resolve,reject)=>{jsonfile.readFile(setting,function(err,obj){if(""!=obj.oxd_id){jsonfile.readFile(parameters,function(err,parametersData){parametersData.code=oxd.Request.code=authCode;parametersData.state=oxd.Request.state=authState;parametersData.scope=oxd.Request.scope=["openid","profile","email"];oxd.Request.oxd_id=obj.oxd_id;jsonfile.writeFile(parameters,parametersData,function(err){oxd.get_tokens_by_code(oxd.Request,function(response){response=JSON.parse(response);var data={accessToken:response.data.access_token,refreshToken:response.data.refresh_token};resolve(data)})})})}else{var err={error:"please register first."};reject(err)}})})}function getUserInfo(accessToken,res){return new Promise((resolve,reject)=>{jsonfile.readFile(setting,function(err,obj){if(""!=obj.oxd_id){oxd.Request.oxd_id=obj.oxd_id;oxd.Request.access_token=accessToken;oxd.get_user_info(oxd.Request,function(response){response=JSON.parse(response);var data={userName:response.data.claims.user_name[0]};if(response.data.claims.userState)data.userState=response.data.claims.userState[0];else data.userState="inactive";data.name=response.data.claims.name[0];data.email=response.data.claims.email[0];data.given_name=response.data.claims.given_name[0];data.family_name=response.data.claims.family_name[0];if(response.data.claims.param){let param=JSON.parse(response.data.claims.param[0]);var areas=[];if(param.area_code){for(i=0;i<param.area_code.length;i++){areas.push({area_code:param.area_code[i],namt:param.area_name[i]})}data.orgResponsibleAreaCode=areas;data.orgProvinceCode=param.area_code;data.orgName=response.data.claims.orgName[0];data.provName=param.area_name}else{data.orgProvinceCode=null;data.orgName=null;data.provName=null}}resolve(data)})}else{var err={error:"please register first."};reject(err)}})})}app.listen(5053);console.log("app listening on port 5053!");module.exports=app;